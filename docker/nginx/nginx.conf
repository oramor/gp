# От имени какого пользователя запускается сервер
user nginx;

# Можно ставить равным кол-ву ядер, отданных контейнеру
worker_processes 1;

# Разрешает использование JIT-компиляции для регулярок, что существенно ускоряет их обработку
pcre_jit on;

# Лог-файл ошибок & Pid-файл
error_log	/var/log/nginx/error.log crit;
pid			/var/log/nginx/nginx.pid;

events {
    # Максимально возможное кол-во соединений
    # Прием максимально возможного кол-ва соединений
    worker_connections		1024;
    multi_accept			on;
}

http {
	# Путь можно не указывать, если они в папке по умолчанию /etc/nginx/mime.types;
	# MIME-тип ответов по умолчанию
    include 		mime.types;
	default_type	application/octet-stream;

	# Наиболее эффективный метод отправки данных в Linux
	# Ограничение объема данных за один вызов
	# Отправляет заголовки и тело запроса одним пакетом, работает значительно быстрее;
    sendfile			on;
	sendfile_max_chunk	128k;
    tcp_nopush			on;

	# Буферизация keep-alive соединений
	# Таймаут в течении которого поддерживается keep-alive соединение
	# Максимальное число запросов keep-alive соединения. Соединение будет разобрвано при превышение лимита
    tcp_nodelay			on;
	keepalive_timeout	30s;
    keepalive_requests	100;
	
    # Закрывать соединения для переставших отвечать клиентов
    # Таймаут для чтения тела запроса от клиента. Кол-во секунд, в течение которых клиент должен начать чтение
    # Таймаут для чтения заголовка запроса от клиента
	reset_timedout_connection	on;
    client_body_timeout			10;
    client_header_timeout		10;

	# Отключение версии сервера
    server_tokens off;

	types_hash_max_size 4096;

    server {
        listen       		80;
        listen       		[::]:80;
        server_name  		localhost;

		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-Forwarded-Proto $scheme;

		# NodeJS
		location / {
			proxy_pass_header Server;
            #proxy_pass http://127.0.0.1:3000;
			proxy_pass http://gp-site-serv:3000;
            #proxy_pass http://gp-site-dev:3000;
            

			# Включает компрессию статики
			# Длина ответа в байтах, начиная с которой применяется сжатие. Берется из заголовка Content-Lenght
			# Степень сжатия (от 1 до 9)
			# Разрешает сжатие для всех проксированных запросов
			# Определяет MIME-типы, которые можно сжимать
			gzip				on;
			gzip_min_length		2048;
			gzip_comp_level		3;
			gzip_proxied		any;
			gzip_types			text/plain text/css text/javascript;
		}

        # Static
        location /static/ {
            root /etc;
            # http://nginx.org/en/docs/http/ngx_http_autoindex_module.html
            autoindex off;
        }

		# IMGProxy
		# location /teaser {
		# 	proxy_pass http://imgproxy:8080;
		# }

		# Minio
		# location /img {
		# 	proxy_connect_timeout 300;
		# 	proxy_http_version 1.1;
		# 	proxy_set_header Connection "";
		# 	chunked_transfer_encoding off;
			
		# 	# Cutting img from URI
		# 	rewrite ^/img(.*)$ $1 break;
		# 	proxy_pass http://minio:9000;
		# }

		# TODO add custom html-pages
        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }
}
